name: SonarCloud Analysis and Publish to PyPI

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  sonarcloud-analysis:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          pip install pytest pytest-cov selenium jq

      - name: Debug Variables
        run: |
          echo "SONAR_TOKEN: ${SONAR_TOKEN:0:4}********"
          echo "PROJECT_KEY: $PROJECT_KEY"

      - name: Fetch SonarCloud Metrics
        id: fetch-metrics
        run: |
          set -e
          SONAR_API_URL="https://sonarcloud.io/api/measures/component"
          PROJECT_KEY="JeanValverde24_SI-8811-Pruebas_QA_U2_VALVERDE_CANO"
          METRICS="bugs,vulnerabilities,code_smells,coverage,duplicated_lines_density,complexity,ncloc,cognitive_complexity,comment_lines_density,security_rating,reliability_rating,sqale_rating"

          echo "Fetching SonarCloud Metrics..."
          RESPONSE=$(curl -s -u "$SONAR_TOKEN:" "$SONAR_API_URL?component=$PROJECT_KEY&metricKeys=$METRICS")

          echo "SonarCloud API Response: $RESPONSE"

          if [[ -z "$RESPONSE" || "$RESPONSE" == *"errors"* ]]; then
            echo "Error fetching SonarCloud metrics. Please check the project key and SonarCloud API token."
            exit 1
          fi

          echo "response=$RESPONSE" >> $GITHUB_ENV

      - name: Debug SonarCloud Response
        run: |
          echo "Inspecting SonarCloud API response..."
          echo "$RESPONSE"

      - name: Publish SonarCloud Metrics as Annotations
        run: |
          echo "## SonarCloud Metrics" >> $GITHUB_STEP_SUMMARY
          echo "| Metric               | Value   |" >> $GITHUB_STEP_SUMMARY
          echo "|----------------------|---------|" >> $GITHUB_STEP_SUMMARY

          COVERAGE=$(echo $RESPONSE | jq -r '.component.measures[] | select(.metric == "coverage").value // "N/A"')
          echo "| Coverage             | $COVERAGE% |" >> $GITHUB_STEP_SUMMARY
        env:
          response: ${{ env.response }}

  publish-package:
    name: Publish Package
    needs: sonarcloud-analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          pip install --upgrade setuptools wheel twine

      - name: Build Package
        run: |
          python setup.py sdist bdist_wheel

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload dist/*
