name: Analyze and Generate Annotations

on:
  push:
    branches:
      - main  # Se ejecutará en la rama principal
  workflow_dispatch:  # Permite la ejecución manual del pipeline

jobs:
  analyze:
    runs-on: ubuntu-latest

    steps:
      # Configurar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v3

      # Configurar Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      # Instalar dependencias necesarias
      - name: Install dependencies for analysis
        run: |
          python -m pip install pytest pytest-cov
          echo "::notice title=Dependencies Installed 📦::Dependencies for analysis installed successfully."

      # Descargar e instalar SonarScanner
      - name: Install SonarScanner
        run: |
          echo "Downloading SonarScanner..."
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
          echo "Extracting SonarScanner..."
          unzip sonar-scanner-cli-4.7.0.2747-linux.zip
          mv sonar-scanner-4.7.0.2747-linux sonar-scanner
          echo "Adding SonarScanner to PATH..."
          echo "$(pwd)/sonar-scanner/bin" >> $GITHUB_PATH
          echo "::notice title=SonarScanner Installed 🚀::SonarScanner successfully installed."

      # Verificar instalación de SonarScanner
      - name: Verify SonarScanner Installation
        run: sonar-scanner --version

      # Ejecutar análisis en SonarCloud
      - name: SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.python.coverage.reportPaths=coverage-reports/coverage.xml \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Generate Annotations
        run: |
          python - <<EOF
          import json
          
          with open('sonar_metrics.json', 'r') as file:
              data = json.load(file)
        
          metrics = {measure['metric']: measure['value'] for measure in data['component']['measures']}
          security = metrics.get('security_rating', 'N/A')
          reliability = metrics.get('reliability_rating', 'N/A')
          maintainability = metrics.get('maintainability_rating', 'N/A')
          coverage = metrics.get('coverage', 'N/A')
          duplications = metrics.get('duplicated_lines_density', 'N/A')
        
          table = f'''| Metric            | Rating | Value        |
          |------------------|--------|--------------|
          | Security         | 🟢 A   | {security}   |
          | Reliability      | 🟢 A   | {reliability}|
          | Maintainability  | 🟢 A   | {maintainability} |
          | Coverage         | 🟢 A   | {coverage}%  |
          | Duplications     | 🔴 E   | {duplications}%  |
          '''
        
          with open('annotations.md', 'w') as output:
            output.write(table)
        
          print(f'::notice title=SonarCloud Metrics::\\n{table}')
          EOF
