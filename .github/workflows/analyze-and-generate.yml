name: Analyze and Publish Package

on:
  push:
    branches:
      - main  # Ejecutar en la rama principal
  workflow_dispatch:  # Permite ejecuci√≥n manual del pipeline

jobs:
  analyze:
    runs-on: ubuntu-latest

    steps:
      # Configurar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v3

      # Configurar Java 17
      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Verificar configuraci√≥n de Java
      - name: Verify Java Configuration
        run: |
          java -version
          echo "JAVA_HOME is set to: $JAVA_HOME"

      # Descargar e instalar SonarScanner
      - name: Install SonarScanner
        run: |
          echo "Downloading SonarScanner..."
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
          echo "Extracting SonarScanner..."
          unzip sonar-scanner-cli-4.7.0.2747-linux.zip
          mv sonar-scanner-4.7.0.2747-linux sonar-scanner
          echo "Forcing SonarScanner to use Java 17..."
          sed -i "1s|^|export JAVA_HOME=$JAVA_HOME\nexport PATH=\$JAVA_HOME/bin:\$PATH\n|" sonar-scanner/bin/sonar-scanner
          echo "$(pwd)/sonar-scanner/bin" >> $GITHUB_PATH

      # Verificar instalaci√≥n de SonarScanner
      - name: Verify SonarScanner Installation
        run: sonar-scanner --version

      # Ejecutar an√°lisis de SonarCloud
      - name: SonarCloud Analysis
        env:
          JAVA_HOME: $JAVA_HOME
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.python.coverage.reportPaths=coverage-reports/coverage.xml \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  publish:
    needs: analyze  # Depende del job anterior
    runs-on: ubuntu-latest

    steps:
      # Configurar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v3

      # Configurar Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      # Instalar dependencias necesarias
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade setuptools wheel twine
          echo "::notice title=Dependencies Installed üì¶::Dependencies for publishing installed successfully."

      # Construir el paquete
      - name: Build Package
        run: |
          python setup.py sdist bdist_wheel
          echo "::notice title=Package Built üöÄ::Package built successfully."

      # Publicar el paquete en PyPI
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          twine upload dist/*
          echo "::notice title=Package Published üèóÔ∏è::The package has been successfully published to PyPI."

      # Generar anotaci√≥n final
      - name: Generate Final Annotation
        run: |
          echo "::notice title=Pipeline Summary::$(cat <<EOF
          | Step                | Status  | Version Published |
          |---------------------|---------|-------------------|
          | üîç SonarCloud Check | ‚úÖ Passed |                   |
          | üì¶ Publish Package  | ‚úÖ Passed | $(python setup.py --version) |
          EOF
          )"
