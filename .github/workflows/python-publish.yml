name: Publish Python Package

on:
  push:
    tags:
      - "v*"  # Se ejecuta cuando se empuje un tag que comience con "v"

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    # Configurar el repositorio
    - name: Checkout repository
      uses: actions/checkout@v3

    # Configurar Python
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"

    # Instalar dependencias necesarias
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel twine pytest pytest-cov
        echo "::notice title=Dependencies Installed 📦::Dependencies installed successfully (pip, setuptools, wheel, twine, pytest, pytest-cov)."

    # Ejecutar análisis en SonarCloud
    - name: SonarCloud analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        sonar-scanner \
          -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.python.coverage.reportPaths=coverage-reports/coverage.xml \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}

    # Generar tabla de anotaciones
    - name: Generate Annotations
      run: |
        python -c "
import json

# Leer el archivo de métricas
with open('sonar_metrics.json', 'r') as file:
    data = json.load(file)

# Extraer las métricas relevantes
metrics = {measure['metric']: measure['value'] for measure in data['component']['measures']}
security = metrics.get('security_rating', 'N/A')
reliability = metrics.get('reliability_rating', 'N/A')
maintainability = metrics.get('maintainability_rating', 'N/A')
coverage = metrics.get('coverage', 'N/A')
duplications = metrics.get('duplicated_lines_density', 'N/A')

# Generar una tabla en formato Markdown
table = f'''| Metric            | Rating | Value        |
|------------------|--------|--------------|
| Security         | 🟢 A   | {security}   |
| Reliability      | 🟢 A   | {reliability}|
| Maintainability  | 🟢 A   | {maintainability} |
| Coverage         | 🟢 A   | {coverage}%  |
| Duplications     | 🔴 E   | {duplications}%  |
'''

# Guardar la tabla en un archivo
with open('annotations.md', 'w') as output:
    output.write(table)

# Mostrar en GitHub Actions
print(f'::notice title=SonarCloud Metrics::\\n{table}')
"

    # Construir el paquete
    - name: Build package
      run: |
        python setup.py sdist bdist_wheel
        echo "::notice title=Package Built 🚀::Package built successfully and is ready for upload."

    # Publicar el paquete en PyPI
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        twine upload dist/*
        echo "::notice title=Package Published 🏗️::The package has been successfully published to PyPI."
